# Copyright (c) libdragon 2021
# See LICENSE file in the project root for full license information.

# This workflow will build the libdragon (future: lib and) tools for Windows using MSYS2 and upload the artifacts.

name: Windows MSYS2 Build. 

on:
  push:
  pull_request:
  # schedule:
  # # At 00:00 UTC every month. But actually should only happen on tag/release?!
  # - cron:  '0 0 1 * *'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { sys: mingw64, arch: x86_64, build: tools},
          { sys: mingw32, arch: i686, build: tools} #, # Probably useful for those on Windows XP or below!
          # Probably requires the GCC toolchain to build before?!
          # { sys: mingw64, arch: x86_64 build: libdragon}, # builds the dragon lib
          # { sys: mingw32, arch: i686 build: libdragon} # Probably useful for those on Windows XP or below!
        ]
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          install: >-
            mingw-w64-${{ matrix.arch }}-libpng
            base-devel
            mingw-w64-${{ matrix.arch }}-toolchain
          update: true

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Correct MSYS2 pthread.h to allow static libraries (otherwise you would need to use a lib DLL, rather than it being built into the EXE.)
        shell: msys2 {0}
        run: |
          sed -z 's/#else\n#define WINPTHREAD_API __declspec(dllimport)/#else\n#define WINPTHREAD_API/' /${{matrix.sys}}/${{ matrix.arch }}-w64-mingw32/include/pthread.h

      - name: Build ${{ matrix.build }}
        shell: msys2 {0}
        run: |
          make ${{ matrix.build }}

      - name: "Upload ${{ matrix.build }} executables"
        uses: actions/upload-artifact@v2
        with:
          name: windows-${{ matrix.arch }}-${{ matrix.build }}
          path: ${{ github.workspace }}/**/tools/*.exe
